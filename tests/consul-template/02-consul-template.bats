#!/usr/bin/env bats
load helpers

# Declare the service
consul_service="consul"
address="$(dig +short ${consul_service})"
port="8500"
service="zookeeper"

@test "Check 'zookeeper' services declared in Consul are also declared in configuration" {

  # Register zookeeper service
  run register_service $service
  [ "$status" -eq 0 ]

  # Call consul template to generate the configuration
  status=$(consul-template -consul-addr ${consul_service}:8500 -template /etc/consul-template/templates/zoo.ctmpl:/conf/zoo.cfg -once;echo $?)
  [ "$status" -eq 0 ]

  # Check the expected configuration has been generated by consul-template
  status=$(test -f /conf/zoo.cfg;echo $?)
  [ "$status" -eq 0 ]

  # Check we can find the address we registered
  status=$(grep "server.1=$address:2888:38888" /conf/zoo.cfg 2>&1 > /dev/null;echo $?)
  [ "$status" -eq 0 ]
}


@test "Check a minimum configuration is defined" {

  # Call consul template to generate the configuration
  status=$(consul-template -consul-addr ${consul_service}:8500 -template /etc/consul-template/templates/zoo.ctmpl:/conf/zoo.cfg -once;echo $?)
  [ "$status" -eq 0 ]

  # Check the expected configuration has been generated by consul-template
  status=$(test -f /conf/zoo.cfg;echo $?)
  [ "$status" -eq 0 ]

  # Check we can find the configuration registered
  status=$(grep "tickTime=2000" /conf/zoo.cfg 2>&1 > /dev/null;echo $?)
  [ "$status" -eq 0 ]
}


@test "Check the minimum configuration can be overridden by environment variables" {
  skip "Need to fix this test case"

  # Override environment variable
  run export ZOO_TICK_TIME=5000

  # Call consul template to generate the configuration
  status=$(consul-template -consul-addr ${consul_service}:8500 -template /etc/consul-template/templates/zoo.ctmpl:/conf/zoo.cfg -once;echo $?)
  [ "$status" -eq 0 ]

  # Check the expected configuration has been generated by consul-template
  status=$(test -f /conf/zoo.cfg;echo $?)
  [ "$status" -eq 0 ]

  # Check we can find the configuration registered
  status=$(grep "tickTime=5000" /conf/zoo.cfg 2>&1 > /dev/null;echo $?)
  [ "$status" -eq 0 ]
}


@test "Check the minimum configuration can be declared in Consul" {

  # Register a configuration
  run register_key "service/zookeeper/tickTime" "10000"
  [ "$status" -eq 0 ]

  # Call consul template to generate the configuration
  status=$(consul-template -consul-addr ${consul_service}:8500 -template /etc/consul-template/templates/zoo.ctmpl:/conf/zoo.cfg -once;echo $?)
  [ "$status" -eq 0 ]

  # Check the expected configuration has been generated by consul-template
  status=$(test -f /conf/zoo.cfg;echo $?)
  [ "$status" -eq 0 ]

  # Check we can find the configuration registered
  status=$(grep "tickTime=10000" /conf/zoo.cfg 2>&1 > /dev/null;echo $?)
  [ "$status" -eq 0 ]
}

@test "Check the advanced configuration can be declared in Consul" {

  # Register a configuration
  run register_key "service/zookeeper/preAllocSize" "64M"
  [ "$status" -eq 0 ]

  # Call consul template to generate the configuration
  status=$(consul-template -consul-addr ${consul_service}:8500 -template /etc/consul-template/templates/zoo.ctmpl:/conf/zoo.cfg -once;echo $?)
  [ "$status" -eq 0 ]

  # Check the expected configuration has been generated by consul-template
  status=$(test -f /conf/zoo.cfg;echo $?)
  [ "$status" -eq 0 ]

  # Check we can find the configuration registered
  status=$(grep "preAllocSize=64M" /conf/zoo.cfg 2>&1 > /dev/null;echo $?)
  [ "$status" -eq 0 ]
}